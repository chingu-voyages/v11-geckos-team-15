{"ast":null,"code":"import fetch from \"node-fetch\";\n\nfunction searchGithub(location = \"\", query = \"\", page = 0) {\n  //console.log(\"location: \"+location+ \" query: \" + query + \" page:\" + page)\n  let url = \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=\".concat(query, \"&location=\").concat(location, \"&page=\").concat(page);\n  fetch(url).then(result => result.json()).then(data => {\n    //console.log(data)\n    let jobs = data.map(item => {\n      let div = document.createElement(\"div\");\n      div.innerHTML = item.description;\n      let description = div.innerText;\n      return {\n        title: item.title,\n        location: item.location,\n        url: item.url,\n        description: description,\n        id: item.id\n      };\n    });\n    this.setState({\n      githubJobs: this.state.githubJobs.concat(jobs)\n    });\n  });\n}\n\nfunction searchAuthentic(location = \"\", query = \"\", page = 0) {\n  console.log(\"Location: \" + location + \" query: \" + query + \" page: \" + page);\n  query = query.replace(/\\s+/g, \" \").trim().split(\" \").join(\",\");\n  let url = \"https://cors-anywhere.herokuapp.com/https://authenticjobs.com/api/?api_key=d6ff48adcf9b56967e2dbdded1d460c4&method=aj.jobs.search&format=json&location=\".concat(location, \"&page=\").concat(page, \"&keywords=\").concat(query);\n  fetch(url).then(result => result.json()).then(data => {\n    //console.log(data.listings.listing)\n    let jobs = data.listings.listing.map(item => {\n      let div = document.createElement(\"div\");\n      div.innerHTML = item.description;\n      let description = div.innerText; //console.log((item.company.location) ? item.company.location.name  : \"N/A\")\n\n      return {\n        id: item.id,\n        location: item.company.location ? item.company.location.name : \"\",\n        description: description,\n        title: item.title,\n        url: item.url\n      };\n    });\n    this.setState({\n      authenticJobs: this.state.authenticJobs.concat(jobs)\n    });\n  });\n}\n\nfunction searchJuju(location = \"\", query = \"\", page = 0) {\n  let jujuContainer = document.createElement(\"div\");\n  let url = \"https://cors-anywhere.herokuapp.com/http://www.juju.com/jobs?k=\".concat(query, \"&l=\").concat(location, \"&r=20&page=\").concat(page);\n  return fetch(url).then(result => result.text()).then(data => {\n    jujuContainer.innerHTML = data;\n    let jobs = jujuContainer.querySelectorAll(\".job\");\n    jobs = Array.prototype.slice.call(jobs); //console.log(jobs)\n\n    jobs = jobs.map((job, index) => {\n      //console.log(job.querySelector(\".company span\").innerText.replace(/[\\(\\)]/g, \"\"))\n      return {\n        id: index + job.querySelector(\".result\").href,\n        url: job.querySelector(\".result\").href,\n        title: job.querySelector(\".result\").innerText,\n        location: job.querySelector(\".company span\").innerText.replace(/[\\(\\)]/g, \"\"),\n        // eslint-disable-next-line no-useless-escape\n        description: job.querySelector(\".description\").innerText.replace(/[\\.{3}]/g, \"\").replace(/\\s\\s+/g, \" \").trim().replace(/more$/, \"\")\n      };\n    });\n    this.setState({\n      jujuJobs: this.state.jujuJobs.concat(jobs)\n    });\n  });\n}\n\nexport default {\n  searchJuju: searchJuju,\n  searchGithub: searchGithub,\n  searchAuthentic: searchAuthentic\n};","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/v11-geckos-team-15/src/JobSources.js"],"names":["fetch","searchGithub","location","query","page","url","then","result","json","data","jobs","map","item","div","document","createElement","innerHTML","description","innerText","title","id","setState","githubJobs","state","concat","searchAuthentic","console","log","replace","trim","split","join","listings","listing","company","name","authenticJobs","searchJuju","jujuContainer","text","querySelectorAll","Array","prototype","slice","call","job","index","querySelector","href","jujuJobs"],"mappings":"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","sourcesContent":["import fetch from \"node-fetch\"\n\n\nfunction searchGithub(location = \"\", query = \"\", page = 0) {\n  //console.log(\"location: \"+location+ \" query: \" + query + \" page:\" + page)\n  let url = `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${query}&location=${location}&page=${page}`\n  fetch(url)\n    .then(result => result.json())\n    .then(data => {\n      //console.log(data)\n      let jobs = data.map((item)=> {\n        let div = document.createElement(\"div\")\n        div.innerHTML = item.description\n        let description = div.innerText\n        return {\n          title: item.title,\n          location: item.location,\n          url: item.url,\n          description: description,\n          id: item.id,\n        }\n      })\n      this.setState({githubJobs: this.state.githubJobs.concat(jobs)})\n    })\n}\n\nfunction searchAuthentic (location = \"\", query = \"\", page = 0) {\n  console.log(\"Location: \" + location + \" query: \" + query + \" page: \" + page)\n  query = query.replace(/\\s+/g, \" \").trim().split(\" \").join(\",\")\n  let url = `https://cors-anywhere.herokuapp.com/https://authenticjobs.com/api/?api_key=d6ff48adcf9b56967e2dbdded1d460c4&method=aj.jobs.search&format=json&location=${location}&page=${page}&keywords=${query}`\n  fetch(url)\n    .then(result => result.json())\n    .then(data => {\n      //console.log(data.listings.listing)\n      let jobs = data.listings.listing.map((item) => {\n        let div = document.createElement(\"div\")\n        div.innerHTML = item.description\n        let description = div.innerText\n        //console.log((item.company.location) ? item.company.location.name  : \"N/A\")\n        return {\n          id: item.id,\n          location: (item.company.location) ? item.company.location.name  : \"\",\n          description: description,\n          title: item.title,\n          url: item.url,\n        }\n      })\n      \n      this.setState({authenticJobs: this.state.authenticJobs.concat(jobs)}) \n    })\n}\n\nfunction searchJuju (location = \"\", query = \"\", page = 0) {\n  let jujuContainer = document.createElement(\"div\")\n  let url = `https://cors-anywhere.herokuapp.com/http://www.juju.com/jobs?k=${query}&l=${location}&r=20&page=${page}`\n  return fetch(url)\n    .then(result => result.text())\n    .then(data => {\n      jujuContainer.innerHTML = data\n      let jobs = jujuContainer.querySelectorAll(\".job\")\n      jobs = Array.prototype.slice.call(jobs)\n      //console.log(jobs)\n      jobs = jobs.map((job, index) => {\n        //console.log(job.querySelector(\".company span\").innerText.replace(/[\\(\\)]/g, \"\"))\n        return {\n          id: index+job.querySelector(\".result\").href,\n          url: job.querySelector(\".result\").href,\n          title: job.querySelector(\".result\").innerText,\n          location: job.querySelector(\".company span\").innerText.replace(/[\\(\\)]/g, \"\"),\n          // eslint-disable-next-line no-useless-escape\n          description: job.querySelector(\".description\").innerText.replace(/[\\.{3}]/g, \"\").replace(/\\s\\s+/g, \" \").trim().replace(/more$/, \"\"),\n        }\n      })\n      this.setState({jujuJobs: this.state.jujuJobs.concat(jobs)})\n    })\n}\n\nexport default {\n  searchJuju: searchJuju,\n  searchGithub: searchGithub,\n  searchAuthentic: searchAuthentic,\n}\n"]},"metadata":{},"sourceType":"module"}